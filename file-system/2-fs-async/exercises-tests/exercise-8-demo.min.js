const _0x4665 = ['fileName:\x20', '2.b', '3.c', 'unlinking\x20', 'success!\x20\x20unlinked\x20', 'a\x20command\x20is\x20required,\x20exiting', 'read', '5.a', 'argv', 'a\x20file\x20name\x20is\x20required,\x20exiting', 'reading\x20filenames\x20...', '\x0alog\x20', 'command:\x20', 'reading\x20from\x20', '\x20ms.\x20\x0a', 'declaring\x20unlinkFileCallback', '3.b', 'unlink', 'now', 'declaring\x20readFileCallback', 'readdirSync', '\x20...', 'readFile', 'log', 'utf-8', 'error', '4.a', '1.a', 'exit']; (function (_0x5d066b, _0x46651b) { const _0x5a2a54 = function (_0x1f064a) { while (--_0x1f064a) { _0x5d066b['push'](_0x5d066b['shift']()); } }; _0x5a2a54(++_0x46651b); }(_0x4665, 0x1eb)); const _0x5a2a = function (_0x5d066b, _0x46651b) { _0x5d066b = _0x5d066b - 0x0; let _0x5a2a54 = _0x4665[_0x5d066b]; return _0x5a2a54; }; const _0x49ac18 = require('fs'); const _0x173fb2 = Date[_0x5a2a('0x14')](); const _0x434955 = '\x0aCOMMANDS:\x0a\x0a\x20\x20list\x0a\x20\x20\x20\x20logs\x20all\x20of\x20the\x20file\x20names\x20in\x20the\x20current\x20directory\x0a\x0a\x20\x20read\x20<fileName>\x0a\x20\x20\x20\x20logs\x20the\x20contents\x20of\x20<fileName>\x0a\x0a\x20\x20unlink\x20<fileName>\x0a\x20\x20\x20\x20removes\x20<fileName>\x20from\x20the\x20directory\x0a\x0aFLAGS:\x0a\x0a\x20\x20-h\x0a\x20\x20\x20\x20print\x20this\x20helpful\x20message\x0a'; const _0x15f177 = (_0x2b0aec, _0x370196) => console[_0x5a2a('0x19')](_0x5a2a('0xd') + _0x2b0aec + ',\x20' + (Date[_0x5a2a('0x14')]() - _0x173fb2) + _0x5a2a('0x10'), _0x370196); if (process[_0x5a2a('0xa')]['includes']('-h')) { _0x15f177(0x0, _0x434955); process[_0x5a2a('0x1')](0x0); } const _0x3adf94 = process[_0x5a2a('0xa')][0x2]; const _0x25cec6 = process[_0x5a2a('0xa')][0x3]; if (_0x3adf94 === undefined) { _0x15f177(_0x5a2a('0x0'), _0x5a2a('0x7')); process[_0x5a2a('0x1')](0x0); } else { _0x15f177('1.b', _0x5a2a('0xe') + _0x3adf94); }; if (_0x3adf94 === 'list') { _0x15f177('3', _0x5a2a('0xc')); const _0x351db4 = _0x49ac18[_0x5a2a('0x16')](__dirname); _0x15f177('4', _0x351db4); process[_0x5a2a('0x1')](0x0); }; if (_0x25cec6 === undefined) { _0x15f177('2.a', _0x5a2a('0xb')); process[_0x5a2a('0x1')](0x0); } else { _0x15f177(_0x5a2a('0x3'), _0x5a2a('0x2') + _0x25cec6); }; if (_0x3adf94 === _0x5a2a('0x8')) { _0x15f177('3.a', _0x5a2a('0x15')); const _0x368de8 = (_0x32b937, _0x16b249) => { if (_0x32b937) { console[_0x5a2a('0x1b')](_0x32b937); } else { _0x15f177(_0x5a2a('0x9'), _0x16b249); } }; _0x49ac18[_0x5a2a('0x18')](__dirname + '/' + _0x25cec6, _0x5a2a('0x1a'), _0x368de8); _0x15f177(_0x5a2a('0x1c'), _0x5a2a('0xf') + _0x25cec6 + _0x5a2a('0x17')); } else if (_0x3adf94 === _0x5a2a('0x13')) { _0x15f177(_0x5a2a('0x12'), _0x5a2a('0x11')); const _0x223f53 = _0x52d726 => { if (_0x52d726) { console['error'](_0x52d726); } else { _0x15f177('5.b', _0x5a2a('0x6') + _0x25cec6); } }; _0x49ac18[_0x5a2a('0x13')](__dirname + '/' + _0x25cec6, _0x223f53); _0x15f177('4.b', _0x5a2a('0x5') + _0x25cec6 + '\x20...'); } else { _0x15f177(_0x5a2a('0x4'), 'unknown\x20command:\x20' + _0x3adf94); }
